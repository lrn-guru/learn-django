{
	"name": "django",
	"short_description": "An introduction to Django, a Python web framework",
	"difficulty": 2,
	"introduction": "Welcome to the `lrn` Django tutorial! We will be installing Django, setting up a sample project, and configuring a simple data schema. Finally, we will use the Django administration interface to add data to our application. Sound exciting? Let's get started!",
	"lessons": [
		{
			"name": "Getting Started",
			"branch": "getting-started",
			"completion": "So far so good. You now have a functioning Django server. In the next lesson, we'll create our first webpage.",
			"tasks": [
				{
					"instruction": "First, use pip to install Django.",
					"hint": "Enter `sudo pip install django`.",
					"test": "pip_install"
				},
				{
					"instruction": "Now, use the django-admin.py script to start a project. Enter django-admin.py startproject guestbook.",
					"hint": "Make sure django-admin.py is on your $PATH. Starting a trolley app would look like `django-admin.py startproject guestbook`.",
					"test": "startproject"
				},
				{
					"instruction": "Now that you have a starting application, test your configuration by running `guestbook/manage.py runserver.",
					"hint":
						"Try changing directories to your project and running `python manage.py runserver`.",
					"test": "runserver"
				}
			]
		},
		{
			"name": "Writing your first view",
			"branch": "first-view",
			"completion": "Great job! If you open `localhost:8000` in a web browser, you'll see the Django equivalent of `hello world`. In our next lesson, we'll explore Django apps and create a database.",
			"tasks": [
				{
					"instruction": "Now that we have a project, it's time to write our first view. Go 2 directories in to the project created, into `guestbook/guestbook`. Make a new file with the following content:\n\nfrom django.http import HttpResponse\n\ndef home(request):\n\treturn HttpResponse('Hello world!')",
					"hint": "Put views.py in the same directory as urls.py and settings.py.",
					"test": "views"
				},
				{
					"instruction": "Now that we have written a view, we will hook it up to our project by modifying `urls.py`. Let's take a look at the default urls.py using `cat`.",
					"hint": "`urls.py` is in `guestbook/guestbook`. To look at urls.py, enter:\n\n`cat urls.py`.",
					"test": "cat_urls"
				},
				{
					"instruction": "What we want to do is enable the `home` view by uncommenting the fourth line. Remove the `#` symbol to uncomment it.",
					"hint": "The urls.py file should look like this when you're done:\nfrom django.conf.urls import patterns, include, url\n\nfrom django.contrib import admin\nadmin.autodiscover()\n\nurlpatterns = patterns('',\n\t# Examples:\n\turl(r'^$', 'guestbook.people.views.home', name='home'),\n\t...).\n\nDon't worry about the `admin`. We'll cover that later.",
					"test": "urls_uncomment"
				},
				{
					"instruction": "Now it's time to run our server again. Run manage.py runserver and the server should start up on port 8000.')",
					"hint": "`manage.py` is one level up from the `views.py` you just wrote, so you can run the server simply by typing `python ../mange.py runserver`.",
					"test": "hello_world"
				}
			]
		}
	]
}